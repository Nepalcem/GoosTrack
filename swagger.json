{
    "openapi": "3.0.1",
    "info": {
        "version": "2.0.3",
        "title": "Goose Calendar - OpenAPI 3.0",
        "description": "This is a Goose Calendar Server based on the OpenAPI 3.0 specification.<p>The project is a web application for efficient time planning.It includes the ability to register users, authenticate and authorize them. Additionally, users can create and track their tasks according to date and time, view own statistics and categorize task by priority and progress status.The application features a user-friendly and intuitive interface that facilitates easy and quick execution of all necessary actions. Furthermore, the project ensures user security through password encryption and token-based identification.</p><p><strong>Technology Stack Used in the Project:</strong></p><p>Node.js - JavaScript runtime environment on the server.</p><p>Express.js - framework for web application development on Node.js.</p><p>MongoDB - NoSQL database</p>",
        "contact": {
            "email": "imbigdash@gmail.com"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://goostrack-backend.onrender.com"
        },
        {
            "url": "http://localhost:8000"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "Users endpoints"
        },
        {
            "name": "Tasks",
            "description": "Tasks endpoints"
        },
        {
            "name": "Reviews",
            "description": "Reviews endpoints"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "AuthControllers_register",
                "summary": "Auth new user",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>username</strong> - string, Username must be no more than 16 symbols </p><p><strong>email</strong> - string</p><p><strong>password</strong> - string, Password must contain at least 1 Upper case letter, 1 lower case letter and be longer than 8 symbols</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegister"
                            }
                        }
                    }
                },
                "security": [],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/registerSchemaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "Missing required FieldName field"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email in use"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "AuthControllers_login",
                "summary": "Login user",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>email</strong> - string, user email</p><p><strong>password</strong> - string, user email</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/loginSchemaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "Missing required FieldName field"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Please verify your email"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Contend",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/logoutSchemaResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User verification",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>email</strong> - string, user email</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/verificationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verificationSchemaResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/verify/:verificationToken": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirmation of verification",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification successful"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get current user info",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (provide valid token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found ",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/edit": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "User update info",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "</p><p><strong>avatarURL</strong> - file, must be in png or jpg format</p></p><p><strong>username</strong> - string, must be no more than 16 symbols</p><p><strong>email</strong> - string</p><p><strong>phone</strong> - string, in +380507771100 format </p><p><strong>skype</strong> - string</p><p><strong>birthday</strong> - string, must be YYYY-MM-DD</p> ",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "avatarURL": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "username": {
                                        "type": "string",
                                        "maxLength": 16
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "pattern": "^\\+380\\d{9}$"
                                    },
                                    "skype": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                    }
                                },
                                "required": ["username", "avatarURL", "email", "phone", "skype", "birthday"] 
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "Server error. Please try again later"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "day",
                        "required": false,
                        "type": "string",
                        "description": "The date on which to return the tasks. Format: DD"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "required": false,
                        "type": "string",
                        "description": "Any date of the month for which tasks must be returned. Format: MM"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "type": "string",
                        "description": "Any date of the month for which tasks must be returned. Format: YYYY"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTasksResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Missing year or month"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "An unexpected error occurred on the server while processing the request."
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task",
                "parameters": {},
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "<p><strong>title</strong> - string, max 250 symbols</p><p><strong>start</strong> - string, time in HH:MM format</p><p><strong>end</strong> - string, time in HH:MM format, must be more than start</p><p><strong>date</strong> - string, date in YYYY:MM:DD format </p><p><strong>priority</strong> - string, the field must be chosen between low/medium/high</p><p><strong>category</strong> - string, the field must be chosen between to-do/in-progress/done</p>",
                    "required": [
                        true,
                        "title",
                        "start",
                        "end",
                        "date",
                        "priority",
                        "category"
                    ],
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "fields name is required"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "An unexpected error occurred on the server while processing the request."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update tasks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Task id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "<p><strong>title</strong> - string, max 250 symbols, </p><p><strong>start</strong> - string, time in HH:MM format</p><p><strong>end</strong> - string, time in HH:MM format, must be more than start</p><p><strong>date</strong> - string, date in YYYY:MM:DD format </p><p><strong>priority</strong> - string, the field must be chosen between low/medium/high</p><p><strong>category</strong> - string, the field must be chosen between to-do/in-progress/done</p>",
                    "required": [
                        true,
                        "title",
                        "start",
                        "end",
                        "date",
                        "priority",
                        "category"
                    ],
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "Missing required FieldName field"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "An unexpected error occurred on the server while processing the request."
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Task id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Task successfully deleted"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Not found"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all users' reviews",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer",
                        "description": "Number page"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "description": "Count reviews in response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllReviewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "Missing required FieldName field"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reviews/own": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user review",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllUsersReviewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing request fields",
                                    "message": "Missing required FieldName field"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create review",
                "parameters": {},
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "<p><strong>rating</strong> - string, app score (from 1 to 5), </p><p><strong>comment</strong> - string, user comment 300 symbols maximum</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "rating is required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review from you already exists"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update review",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "<p><strong>rating</strong> - string, app score (from 1 to 5), </p><p><strong>comment</strong> - string, user comment 300 symbols maximum</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateReviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing owner parameter",
                                    "message": "The 'owner' parameter is required for this request."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Authentication failed",
                                    "message": "Authentication is required to access this resource."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Review not found",
                                    "message": "The review to be updated was not found."
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "An unexpected error occurred on the server while processing the request."
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Review task",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteReviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Missing owner",
                                    "message": "The 'owner' is required for this request."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Authentication failed",
                                    "message": "Authentication is required to access this resource."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found ",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Review not found",
                                    "message": "Review not found for delete"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Server error",
                                    "message": "An unexpected error occurred on the server while processing the request."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserRegister": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username",
                        "example": "Iryna Dev"
                    },
                    "email": {
                        "type": "string",
                        "example": "iryna@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Iryna1234567$"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "password"
                ]
            },
            "registerSchemaResponse": {
                "type": "object",
                "example": "Please verify your email"
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "iryna@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Iryna1234567$"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "loginSchemaResponse": {
                "type": "object",
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                    "user": {
                        "username": "Iryna Dev",
                        "email": "iryna.com"
                    }
                }
            },
            "logoutSchemaResponse": {
                "type": "object",
                "example": {
                    "message": "Logout success"
                }
            },
            "verificationSchema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "user email",
                        "example": "iryna@gmail.com"
                    }
                },
                "required": "email"
            },
            "verificationTokenSchemaResponse": {
                "type": "object",
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                    "user": {
                        "username": "Iryna Dev",
                        "email": "iryna.com",
                        "avatar": "https://s.gravatar.com/avatar/5ffe2fd09d4f8a6dcb16c462e412df13?d=retro&s=100"
                    }
                }
            },
            "verificationSchemaResponse": {
                "type": "object",
                "example": {
                    "message": "Verification email sent"
                }
            },
            "GetAllReviewsResponse": {
                "type": "object",
                "example": {
                    "totalReviews": "2",
                    "totalPages": 1,
                    "currentPage": 1,
                    "limit": 10,
                    "reviews": [
                        {
                            "_id": "64f26065127adde86aa32278",
                            "rating": 5,
                            "comment": "GooseTrack is incredibly helpful, the sidebar with account management, calendar, and filter options make navigation seamless...",
                            "owner": {
                                "name": "Iryva Dev",
                                "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693657749/users/...png"
                            },
                            "createdAt": "2023-09-01T22:06:29.420Z",
                            "updatedAt": "2023-09-01T22:06:29.420Z"
                        },
                        {
                            "_id": "64f25d43127adde86aa32269",
                            "rating": 4,
                            "comment": "Very nice app.",
                            "owner": {
                                "username": "Mark Team",
                                "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693658162/users...png"
                            },
                            "createdAt": "2023-07-01T21:53:07.249Z",
                            "updatedAt": "2023-07-01T21:53:07.249Z"
                        }
                    ]
                }
            },
            "GetAllUsersReviewsResponse": {
                "type": "object",
                "example": {
                    "reviews": [
                        {
                            "_id": "64f25d43127adde86aa32269",
                            "rating": 5,
                            "comment": "GooseTrack is impressive, the calendar view and filter options make it easy to stay organized and focused. Highly recommended.",
                            "owner": {
                                "username": "Iryna Dev",
                                "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693658162/users...png"
                            },
                            "createdAt": "2023-09-01T21:53:07.249Z",
                            "updatedAt": "2023-09-01T21:53:07.249Z"
                        }
                    ]
                }
            },
            "ReviewCreateSchema": {
                "type": "object",
                "properties": {
                    "rating": {
                        "type": "Number",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "GooseTrack is incredibly helpful and cool app 😻"
                    }
                },
                "required": [
                    "rating",
                    "comment"
                ]
            },
            "UpdateReviewResponse": {
                "type": "object",
                "example": {
                    "message": "Review successfully updated",
                    "reviews": [
                        {
                            "_id": "64f25d43127adde86aa32269",
                            "rating": 4,
                            "comment": "Highly recommended.",
                            "owner": "64f25fee127adde86aa32270",
                            "createdAt": "2023-09-01T21:53:07.249Z",
                            "updatedAt": "2023-09-01T21:53:07.249Z"
                        }
                    ]
                }
            },
            "DeleteReviewResponse": {
                "type": "object",
                "example": {
                    "message": "Review deleted successfully"
                }
            },
            "GetTasksResponse": {
                "type": "object",
                "example": {
                    "message": "Get all tasks for the month 9 2019",
                    "tasks": [],
                    "tasksByDay": []
                }
            },
            "CreateTaskSchema": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Trip to Canada"
                    },
                    "start": {
                        "type": "string",
                        "example": "13:00"
                    },
                    "end": {
                        "type": "string",
                        "example": "23:00"
                    },
                    "date": {
                        "type": "string",
                        "example": "2023-09-15"
                    },
                    "priority": {
                        "type": "string",
                        "example": "high"
                    },
                    "category": {
                        "type": "string",
                        "example": "in-progress"
                    }
                },
                "required": [
                    "title",
                    "start",
                    "end",
                    "date",
                    "priority",
                    "category"
                ]
            },
            "CreateTaskResponse": {
                "type": "object",
                "example": {
                    "title": "Trip to Canada",
                    "start": "13:00",
                    "end": "23:00",
                    "date": "2023-09-15",
                    "priority": "high",
                    "category": "in-progress",
                    "owner": "64f25fee127adde86aa32270",
                    "_id": "64f5bbced7ff69547fd6f1aa",
                    "createdAt": "2023-09-04T11:13:18.301Z",
                    "updatedAt": "2023-09-04T11:13:18.301Z"
                }
            },
            "UpdateTaskResponse": {
                "type": "object",
                "example": {
                    "message": "Task successfully updated",
                    "result": {
                        "_id": "64f5c96ad7ff69547fd6f5f5",
                        "title": "Trip to Canada",
                        "start": "13:00",
                        "end": "23:00",
                        "date": "2023-09-15",
                        "priority": "high",
                        "category": "in-progress",
                        "owner": "64f25fee127adde86aa32270",
                        "createdAt": "2023-09-04T12:11:22.128Z",
                        "updatedAt": "2023-09-04T12:12:06.170Z"
                    }
                }
            },
            "CurrentUserResponse": {
                "type": "object",
                "example": {
                    "username": "Iryna Dev",
                    "email": "iryna@gmail.com",
                    "phone": null,
                    "skype": null,
                    "birthday": null,
                    "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693657749/users...png"
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "avatarURL": {
                        "type": "png/jpg",
                        "example": "my-photo.png"
                    },
                    "username": {
                        "type": "string",
                        "example": "Iryna Dev"
                    },
                    "email": {
                        "type": "string",
                        "example": "iryna@gmail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+380507771100"
                    },
                    "skype": {
                        "type": "string",
                        "example": "+380507771100"
                    },
                    "birthday": {
                        "type": "string",
                        "example": "2020-09-20"
                    }
                },
                "required": [
                    "avatarURL",
                    "username",
                    "email",
                    "phone",
                    "skype",
                    "birthday"
                ]
            },
            "UpdateUserResponse": {
                "type": "object",
                "example": {
                    "avatarURL": "my-photo.png",
                    "username": "Iryna Dev",
                    "email": "iryna@gmail.com",
                    "phone": "+380507771100",
                    "skype": "+380507771100",
                    "birthday": "2020-09-20"
                }
            },
            "UpdateAvatarResponse": {
                "type": "object",
                "example": {
                    "avatar": "http://res.cloudinary.com/dfsbblojt/image/upload/updateAvatar/users...png"
                }
            }
        },
        "components": {
            "schemas": {
                "UserRegister": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "description": "Username",
                            "example": "Iryna Dev"
                        },
                        "email": {
                            "type": "string",
                            "example": "iryna@gmail.com"
                        },
                        "password": {
                            "type": "string",
                            "example": "Iryna1234567$"
                        }
                    },
                    "required": [
                        "username",
                        "email",
                        "password"
                    ]
                },
                "registerSchemaResponse": {
                    "type": "object",
                    "example": "Please verify your email"
                },
                "UserLogin": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "iryna@gmail.com"
                        },
                        "password": {
                            "type": "string",
                            "example": "Iryna1234567$"
                        }
                    },
                    "required": [
                        "email",
                        "password"
                    ]
                },
                "loginSchemaResponse": {
                    "type": "object",
                    "example": {
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                        "user": {
                            "username": "Iryna Dev",
                            "email": "iryna.com",
                            "avatar": "https://s.gravatar.com/avatar/5ffe2fd09d4f8a6dcb16c462e412df13?d=retro&s=100"
                        }
                    }
                },
                "logoutSchemaResponse": {
                    "type": "object",
                    "example": {
                        "message": "Logout success"
                    }
                },
                "verificationSchema": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "user email",
                            "example": "iryna@gmail.com"
                        }
                    },
                    "required": "email"
                },
                "verificationTokenSchemaResponse": {
                    "type": "object",
                    "example": {
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                        "user": {
                            "username": "Iryna Dev",
                            "email": "iryna.com",
                            "avatar": "https://s.gravatar.com/avatar/5ffe2fd09d4f8a6dcb16c462e412df13?d=retro&s=100"
                        }
                    }
                },
                "verificationSchemaResponse": {
                    "type": "object",
                    "example": {
                        "message": "Verification email sent"
                    }
                },
                "GetAllReviewsResponse": {
                    "type": "object",
                    "example": {
                        "totalReviews": "2",
                        "totalPages": 1,
                        "currentPage": 1,
                        "limit": 10,
                        "reviews": [
                            {
                                "_id": "64f26065127adde86aa32278",
                                "rating": 5,
                                "comment": "GooseTrack is incredibly helpful, the sidebar with account management, calendar, and filter options make navigation seamless...",
                                "owner": {
                                    "name": "Iryva Dev",
                                    "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693657749/users/...png"
                                },
                                "createdAt": "2023-09-01T22:06:29.420Z",
                                "updatedAt": "2023-09-01T22:06:29.420Z"
                            },
                            {
                                "_id": "64f25d43127adde86aa32269",
                                "rating": 4,
                                "comment": "Very nice app.",
                                "owner": {
                                    "username": "Mark Team",
                                    "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693658162/users...png"
                                },
                                "createdAt": "2023-07-01T21:53:07.249Z",
                                "updatedAt": "2023-07-01T21:53:07.249Z"
                            }
                        ]
                    }
                },
                "GetAllUsersReviewsResponse": {
                    "type": "object",
                    "example": {
                        "reviews": [
                            {
                                "_id": "64f25d43127adde86aa32269",
                                "rating": 5,
                                "comment": "GooseTrack is impressive, the calendar view and filter options make it easy to stay organized and focused. Highly recommended.",
                                "owner": {
                                    "username": "Iryna Dev",
                                    "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693658162/users...png"
                                },
                                "createdAt": "2023-09-01T21:53:07.249Z",
                                "updatedAt": "2023-09-01T21:53:07.249Z"
                            }
                        ]
                    }
                },
                "ReviewCreateSchema": {
                    "type": "object",
                    "properties": {
                        "rating": {
                            "type": "Number",
                            "example": "5"
                        },
                        "comment": {
                            "type": "string",
                            "example": "GooseTrack is incredibly helpful and cool app 😻"
                        }
                    },
                    "required": [
                        "rating",
                        "comment"
                    ]
                },
                "UpdateReviewResponse": {
                    "type": "object",
                    "example": {
                        "message": "Review successfully updated",
                        "reviews": [
                            {
                                "_id": "64f25d43127adde86aa32269",
                                "rating": 4,
                                "comment": "Highly recommended.",
                                "owner": "64f25fee127adde86aa32270",
                                "createdAt": "2023-09-01T21:53:07.249Z",
                                "updatedAt": "2023-09-01T21:53:07.249Z"
                            }
                        ]
                    }
                },
                "DeleteReviewResponse": {
                    "type": "object",
                    "example": {
                        "message": "Review deleted successfully"
                    }
                },
                "GetTasksResponse": {
                    "type": "object",
                    "example": {
                        "message": "Get all tasks for the month 9 2019",
                        "tasks": [],
                        "tasksByDay": []
                    }
                },
                "CreateTaskSchema": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "example": "Trip to Canada"
                        },
                        "start": {
                            "type": "string",
                            "example": "13:00"
                        },
                        "end": {
                            "type": "string",
                            "example": "23:00"
                        },
                        "date": {
                            "type": "string",
                            "example": "2023-09-15"
                        },
                        "priority": {
                            "type": "string",
                            "example": "high"
                        },
                        "category": {
                            "type": "string",
                            "example": "in-progress"
                        }
                    },
                    "required": [
                        "title",
                        "start",
                        "end",
                        "date",
                        "priority",
                        "category"
                    ]
                },
                "CreateTaskResponse": {
                    "type": "object",
                    "example": {
                        "title": "Trip to Canada",
                        "start": "13:00",
                        "end": "23:00",
                        "date": "2023-09-15",
                        "priority": "high",
                        "category": "in-progress",
                        "owner": "64f25fee127adde86aa32270",
                        "_id": "64f5bbced7ff69547fd6f1aa",
                        "createdAt": "2023-09-04T11:13:18.301Z",
                        "updatedAt": "2023-09-04T11:13:18.301Z"
                    }
                },
                "UpdateTaskResponse": {
                    "type": "object",
                    "example": {
                        "message": "Task successfully updated",
                        "result": {
                            "_id": "64f5c96ad7ff69547fd6f5f5",
                            "title": "Trip to Canada",
                            "start": "13:00",
                            "end": "23:00",
                            "date": "2023-09-15",
                            "priority": "high",
                            "category": "in-progress",
                            "owner": "64f25fee127adde86aa32270",
                            "createdAt": "2023-09-04T12:11:22.128Z",
                            "updatedAt": "2023-09-04T12:12:06.170Z"
                        }
                    }
                },
                "CurrentUserResponse": {
                    "type": "object",
                    "example": {
                        "username": "Iryna Dev",
                        "email": "iryna@gmail.com",
                        "phone": null,
                        "skype": null,
                        "birthday": null,
                        "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693657749/users...png"
                    }
                },
                "UpdateUserRequest": {
                    "type": "object",
                    "properties": {
                        "avatarURL": {
                            "type": "png/jpg",
                            "example": "my-photo.png"
                        },
                        "username": {
                            "type": "string",
                            "example": "Iryna Dev"
                        },
                        "email": {
                            "type": "string",
                            "example": "iryna@gmail.com"
                        },
                        "phone": {
                            "type": "string",
                            "example": "+380507771100"
                        },
                        "skype": {
                            "type": "string",
                            "example": "+380507771100"
                        },
                        "birthday": {
                            "type": "string",
                            "example": "2020-09-20"
                        }
                    },
                    "required": [
                        "avatarURL",
                        "username",
                        "email",
                        "phone",
                        "skype",
                        "birthday"
                    ]
                },
                "UpdateUserResponse": {
                    "type": "object",
                    "example": {
                        "avatarURL": "my-photo.png",
                        "username": "Iryna Dev",
                        "email": "iryna@gmail.com",
                        "phone": "+380507771100",
                        "skype": "+380507771100",
                        "birthday": "2020-09-20"
                    }
                },
                "UpdateAvatarResponse": {
                    "type": "object",
                    "example": {
                        "avatar": "http://res.cloudinary.com/dfsbblojt/image/upload/updateAvatar/users...png"
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://nepalcem.github.io/goostrack_front/register",
                        "scopes": {
                            "read": "Read access"
                        }
                    }
                }
            }
        }
    }
}